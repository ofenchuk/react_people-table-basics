{"version":3,"sources":["components/Loader/Loader.tsx","components/People/People.tsx","App.tsx","index.tsx"],"names":["Loader","className","PersonLink","person","name","slug","to","classNames","sex","peopleList","peoples","map","mother","find","p","motherName","father","fatherName","People","React","useState","people","setPeople","isError","setIsError","isLoading","setIsLoading","selectedTodo","useParams","useEffect","fetch","response","json","data","length","personId","born","died","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2cfdca79.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link, useParams } from 'react-router-dom';\nimport React, { FC, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { PeopleType } from '../../Type/People';\n\ntype Props = {\n  person: PeopleType;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const { name, slug } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n\nconst peopleList = (peoples: PeopleType[]) => {\n  const newPeople = peoples.map((person) => {\n    const mother = peoples.find((p) => p.name === person.motherName);\n    const father = peoples.find((p) => p.name === person.fatherName);\n\n    return {\n      ...person,\n      mother: mother || null,\n      father: father || null,\n      motherName: person.motherName || '-',\n      fatherName: person.fatherName || '-',\n    };\n  });\n\n  return newPeople;\n};\n\nexport const People = () => {\n  const [people, setPeople] = React.useState<PeopleType[]>([]);\n  const [isError, setIsError] = React.useState<boolean>(false);\n  const [isLoading, setIsLoading] = React.useState<boolean>(true);\n  const selectedTodo = useParams();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await fetch(\n          'https://mate-academy.github.io/react_people-table/api/people.json',\n        );\n        const data = await response.json();\n\n        setPeople(peopleList(data));\n\n        setIsLoading(false);\n      } catch (error) {\n        setIsError(true);\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !isError && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n          )}\n\n          {people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map((person) => (\n                  <tr\n                    data-cy=\"person\"\n                    className={classNames({\n                      'has-background-warning':\n                        person.slug === selectedTodo.personId,\n                    })}\n                    key={person.slug}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {person.mother ? (\n                        <PersonLink person={person.mother} />\n                      ) : (\n                        person.motherName\n                      )}\n                    </td>\n                    <td>\n                      {person.father ? (\n                        <PersonLink person={person.father} />\n                      ) : (\n                        person.fatherName\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  NavLink, Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport classNames from 'classnames';\nimport { People } from './components/People';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => classNames(\n                { 'has-background-grey-lighter': isActive },\n                'navbar-item',\n              )}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={({ isActive }) => classNames(\n                { 'has-background-grey-lighter': isActive },\n                'navbar-item',\n              )}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\" element={<People />}>\n              <Route index element={<People />} />\n              <Route path=\":personId\" element={<People />} />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement).render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n);\n"],"sourceRoot":""}